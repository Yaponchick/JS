function modals() {

    function bindModal(triggerSelector, modalSelector, closeSelector) {
        
        const triggers = document.querySelectorAll(triggerSelector);
        const modal = document.querySelector(modalSelector);
        const close = document.querySelector(closeSelector);

        triggers.forEach(trigger => {
            trigger.addEventListener('click', (e) => {
                e.preventDefault();
                openModal(modal);
            });
        });

        close.addEventListener('click', () => closeModal(modal));

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal(modal);
            }
        });
    }

    function openModal(modal) {
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }

    function closeModal(modal) {
        modal.style.display = 'none';
        document.body.style.overflow = '';
    }

    function showModalByTime(selector, time) {
        setTimeout(() => {
            const modal = document.querySelector(selector);
            if (modal) {
                openModal(modal);
            }
        }, time);
    }

    bindModal('.popup_engineer_btn', '.popup_engineer', '.popup_engineer .popup_close');
    bindModal('.phone_link', '.popup', '.popup .popup_close');

    showModalByTime('.popup', 6000);
}

export default modals;




function tabs(headerSelector, tabSelector, contentSelector, activeClass) {
    const header = document.querySelector(headerSelector);
    const tabs = Array.from(document.querySelectorAll(tabSelector));
    const cont = Array.from(document.querySelectorAll(contentSelector));

    var Hide = () => {
        cont.forEach(content => {
            content.style.display = 'none';
        });
        tabs.forEach(tab => {
            tab.classList.remove(activeClass);
        });
    };

    var Show = (index) => {
        cont[index].style.display = 'block';
        tabs[index].classList.add(activeClass);
    };

    header.addEventListener('click', (event) => {
        var target = event.target.closest(tabSelector);
        if (target && tabs.includes(target)) { 
            var tabIndex = tabs.indexOf(target);
            Hide();
            Show(tabIndex);
        }
    });
}

export default tabs;
